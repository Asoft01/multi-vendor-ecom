<!-- $table->id();
$table->string('name', 50)->nullable();
$table->unsignedBigInteger('user_id')->nullable();
$table->string('image_name')->nullable();
$table->text('image_url')->nullable();
$table->string('image_id')->nullable();
$table->enum('uploadType', ['MSDOC', 'PDF', 'IMAGE'])->default('IMAGE');
$table->enum('type', ['ENABLED', 'DISABLED'])->default('ENABLED');
$table->timestamps(); -->


========================================================================================================================================
<?//php

// namespace App\Http\Controllers;

// use App\Http\Enums\GeneralStatus;
// use App\Http\Helpers\ApiResponse;
// use App\Http\Requests\KycRequest;
// use App\Models\KycDocument;
// use Illuminate\Http\Request;
// use Illuminate\Http\Response;
// use Illuminate\Contracts\Foundation\Application;
// use Illuminate\Contracts\Routing\ResponseFactory;
// use Illuminate\Support\Str;

// class KycDocumentController extends Controller
// {
//     public function add(KycRequest $request): Response|Application|ResponseFactory
//     {

//         if ($request->hasFile('image_name')) {
//             $randomize = rand(111111, 999999);
//             $extension = $request->file('image_name')->getClientOriginalExtension();
//             // dd($extension); die;
//             $kycDocument = new KycDocument();
//             if ($extension == "jpg" || $extension == "jpeg") {
//                 $kycDocument->uploadType = "IMAGE";
//             } elseif ($extension == "docx" || $extension == "doc") {
//                 $kycDocument->uploadType = "MSDOC";
//             } else if ($extension == "pdf") {
//                 $kycDocument->uploadType = "PDF";
//             }
//             $filename = $randomize . '.' . $extension;
//             // $image = $request->file('image_name')->move('images/kycs/', $filename);

//             $uploadCloudinary = cloudinary()->upload(
//                 $request->file('image_name')->getRealPath(),
//                 [
//                     'folder' => 'pickup/kyc',
//                     'resource_type' => 'auto',
//                     'transformation' => [
//                         'quality' => 'auto',
//                         'fetch_format' => 'auto'
//                     ]
//                 ]
//             );
//             $imageUrl = $uploadCloudinary->getSecurePath();
//             $imageId = $uploadCloudinary->getPublicId();
//         } else {
//             $imageUrl = Null;
//             $imageId = Null;
//         }

//         $kycDocument->name =        $request->name;
//         $kycDocument->image_name =  $filename;
//         $kycDocument->type        = "ENABLED";

//         $kycDocument->image_id = $imageId;
//         $kycDocument->image_url = $imageUrl;
//         $kycDocument->save();
//         return ApiResponse::send(true, "Kyc added successfully", null, 200);
//     }

//     public function list(): Response|Application|ResponseFactory
//     {
//         $kycDocuments = KycDocument::query()->where('type', GeneralStatus::KENABLED)->paginate($this->per_page);
//         return response($kycDocuments, 200);
//     }

//     public function edit(KycRequest $request, KycDocument $kycdocument): Response|Application|ResponseFactory
//     {
//         if ($request->hasFile('image_name')) {
//             $randomize = rand(111111, 999999);
//             $extension = $request->file('image_name')->getClientOriginalExtension();
//             // dd($extension); die;
//             $kycDocument = new KycDocument();
//             if ($extension == "jpg" || $extension == "jpeg") {
//                 $kycDocument->uploadType = "IMAGE";
//             } elseif ($extension == "docx" || $extension == "doc") {
//                 $kycDocument->uploadType = "MSDOC";
//             } else if ($extension == "pdf") {
//                 $kycDocument->uploadType = "PDF";
//             }
//             $filename = $randomize . '.' . $extension;
//         }

//         if ($request->hasFile('image_name')) {
//             $uploadCloudinary = cloudinary()->upload(
//                 $request->file('image_name')->getRealPath(),
//                 [
//                     'folder' => 'pickup/kyc',
//                     'resource_type' => 'auto',
//                     'transformation' => [
//                         'quality' => 'auto',
//                         'fetch_format' => 'auto'
//                     ]
//                 ]
//             );
//             $imageUrl = $uploadCloudinary->getSecurePath();
//             $imageId = $uploadCloudinary->getPublicId();
//         } else {
//             $imageUrl = Null;
//             $imageId = Null;
//         }

//         KycDocument::where('id', $kycdocument->id)->update([
//             'name' =>       $request->name,
//             'image_name' => $request->image_name,
//             'type' =>       GeneralStatus::ENABLED,
//             'image_url' =>  $imageUrl,
//             'image_id' =>   $imageId,
//         ]);
//         return ApiResponse::send(true, Str::title($request->name) . " edited successfully", null, 200);
//     }

//     public function delete(KycDocument $kycdocument): Response|Application|ResponseFactory
//     {
//         KycDocument::where('id', $kycdocument->id)->delete();
//         return ApiResponse::send(false, "Kyc deleted successfully", null, 200);
//     }

//     public function search(Request $request): Response|Application|ResponseFactory
//     {
//         $request->validate([
//             'value' => 'string|max:50'
//         ]);
//         $search_query = '%' . $request->value . '%';
//         $kycdocument = KycDocument::query()
//             ->orWhere('name', 'LIKE', $search_query)
//             ->orWhere('type', 'LIKE', $search_query)
//             ->orWhere('image_id', 'LIKE', $search_query)
//             ->paginate($this->per_page);
//         return ApiResponse::sendPaginated(false, "search results retrieved successfully", $kycdocument, 200);
//     }
// }

//=====================================================================================================================================

// Route::post('/add', [KycDocumentController::class, 'add']);
// Route::get('/list', [KycDocumentController::class, 'list']);
// Route::post('/edit/{kycdocument}', [KycDocumentController::class, 'edit']);
// Route::post('/delete/{kycdocument}', [KycDocumentController::class, 'delete']);
// Route::get('/search', [KycDocumentController::class, 'search']);


//=====================================================================================================================================
<//?php

// namespace Database\Seeders;

// use App\Models\KycDocument;
// use Illuminate\Database\Console\Seeds\WithoutModelEvents;
// use Illuminate\Database\Seeder;

// class KycDocumentTableSeeder extends Seeder
// {
//     /**
//      * Run the database seeds.
//      *
//      * @return void
//      */
//     public function run()
//     {
//         $kycRecords = [
//             ['id' => 1, 'name' => 'Paper Based', 'image_name' => 'test.jpg', 'image_url' => 'https://res.cloudinary.com/adeleke/image/upload/v1660745547/posts/restaurant.jpg', 'uploadType' => 'IMAGE', 'type' => 'ENABLED', 'created_at' => \Carbon\Carbon::now(), 'updated_at' => \Carbon\Carbon::now()],
//         ];

//         KycDocument::insert($kycRecords);
//     }
// }
